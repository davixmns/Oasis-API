// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OasisAPI.Infra.Context;

#nullable disable

namespace OasisAPI.Infra.Migrations
{
    [DbContext(typeof(OasisDbContext))]
    [Migration("20240912172946_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.OasisChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OasisUserId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OasisUserId");

                    b.ToTable("OasisChats");
                });

            modelBuilder.Entity("Domain.Entities.OasisMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("From")
                        .HasColumnType("int");

                    b.Property<bool?>("IsSaved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("OasisChatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OasisChatId");

                    b.ToTable("OasisMessages");
                });

            modelBuilder.Entity("Domain.Entities.OasisUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefreshTokenExpiryDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("oasis_users");
                });

            modelBuilder.Entity("Domain.ValueObjects.OasisChatBotInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatBotEnum")
                        .HasColumnType("int");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OasisChatId")
                        .HasColumnType("int");

                    b.Property<string>("ThreadId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OasisChatId");

                    b.ToTable("OasisChatBotInfos");
                });

            modelBuilder.Entity("Domain.Entities.OasisChat", b =>
                {
                    b.HasOne("Domain.Entities.OasisUser", "User")
                        .WithMany("Chats")
                        .HasForeignKey("OasisUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.OasisMessage", b =>
                {
                    b.HasOne("Domain.Entities.OasisChat", null)
                        .WithMany("Messages")
                        .HasForeignKey("OasisChatId");
                });

            modelBuilder.Entity("Domain.ValueObjects.OasisChatBotInfo", b =>
                {
                    b.HasOne("Domain.Entities.OasisChat", null)
                        .WithMany("ChatBots")
                        .HasForeignKey("OasisChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.OasisChat", b =>
                {
                    b.Navigation("ChatBots");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Domain.Entities.OasisUser", b =>
                {
                    b.Navigation("Chats");
                });
#pragma warning restore 612, 618
        }
    }
}
